/*
 * Copyright (c) 2019, Andr√°s Bodor
 * Licensed under BSD 3-Clause
 * For more information see the supplied
 * LICENSE file
 */

#pragma once

#define info::parse_MAJOR @info::parse_VERSION_MAJOR@
#define info::parse_MINOR @info::parse_VERSION_MINOR@
#define info::parse_PATCH @info::parse_VERSION_PATCH@
#define info::parse_BUILD_DATE "@info::parse_VERSION_BUILD_DATE@"
#define info::parse_WIDE_BUILD_DATE L"@info::parse_VERSION_BUILD_DATE@"
#define info::parse_VERSION "@info::parse_VERSION@"
#define info::parse_WIDE_VERSION L"@info::parse_VERSION@"

#include <string>
#include "config.hpp"

namespace info::parse {
  static inline std::string getVersion() {
      if (detail::Config::UseBuildTimeInVersion) {
          return info::parse_VERSION " built on " info::parse_BUILD_DATE;
      }
      return info::parse_VERSION;
  }

  static inline std::wstring getWideVersion() {
      if (detail::Config::UseBuildTimeInVersion) {
          return info::parse_WIDE_VERSION L" built on " info::parse_WIDE_BUILD_DATE;
      }
      return info::parse_WIDE_VERSION;
  }

#if defined(_WIN32) || defined(_WIN64)

  static inline std::wstring getAutoVersion() {
      return getWideVersion();
#else
      static inline std::string getAutoVersion() {
          return getVersion();
#endif
  }
}
